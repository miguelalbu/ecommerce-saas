// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// MODELOS DA APLICAÇÃO

model Usuario {
  id        String   @id @default(uuid())
  nome      String
  email     String   @unique
  senhaHash String   @map("senha_hash")
  funcao    String   @default("ADMIN")
  ativo     Boolean  @default(true)
  criadoEm  DateTime @default(now()) @map("criado_em")

  @@map("usuarios")
}

model Categoria {
  id        String    @id @default(uuid())
  nome      String    @unique
  produtos  Produto[]

  @@map("categorias")
}

model Produto {
  id          String    @id @default(uuid())
  nome        String
  descricao   String?
  preco       Decimal   @db.Decimal(10, 2)
  estoque     Int       @default(0)
  ativo       Boolean   @default(true)
  imageUrl    String?   @map("image_url")
  criadoEm    DateTime  @default(now()) @map("criado_em")
  
  categoria   Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId String    @map("categoria_id")

  @@map("produtos")
}

model Cliente {
  id               String    @id @default(uuid())
  nome             String
  sobrenome        String? // Adicionado
  email            String    @unique
  cpf              String?   @unique // Adicionado e marcado como único
  telefone         String?   // Adicionado
  dataNascimento   DateTime? @map("data_nascimento") // Adicionado
  genero           String?   // Adicionado
  senhaHash        String    @map("senha_hash")
  criadoEm         DateTime  @default(now()) @map("criado_em")
  pedidos          Pedido[]

  @@map("clientes")
}

model Pedido {
  id           String   @id @default(uuid())
  valor_total  Decimal  @db.Decimal(10, 2)
  status       String   @default("PROCESSANDO")
  criadoEm     DateTime @default(now()) @map("criado_em")
  cliente_nome String?
  
  // Adicione estas duas linhas para conectar ao cliente
  cliente      Cliente  @relation(fields: [clienteId], references: [id])
  clienteId    String   @map("cliente_id")

  @@map("pedidos")
}